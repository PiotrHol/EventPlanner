{"version":3,"sources":["firebase.js","useUserStatus.js","validation.js","images/logo.png","LogBox/LogBox.js","images/navLogo.png","EventInfo/EventInfo.js","Information/Information.js","Task/Task.js","Tasks/Tasks.js","Guest/Guest.js","Guests/Guests.js","Cost/Cost.js","Event/Event.js","Events/Events.js","Home/Home.js","App/App.js","index.js"],"names":["require","config","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","useUserStatus","useState","isLogIn","userId","checkAuth","setCheckAuth","useEffect","unsubscribe","onAuthStateChanged","getAuth","user","uid","eventValidation","isValidate","inputs","forEach","input","isEmpty","length","LogBox","newUserForm","setNewUserForm","email","setEmail","password","setPassword","repeatPassword","setRepeatPassword","wrongEmailMessage","setWrongEmailMessage","wrongPasswordMessage","setWrongPasswordMessage","wrongAgainPasswordMessage","setWrongAgainPasswordMessage","loginInError","setLogInError","loginInErrorMessage","setLogInErrorMessage","auth","formChanger","event","preventDefault","prev","className","src","logo","alt","type","value","onChange","target","onClick","repeatedPassword","errorLoginMessage","errorPasswordMessage","errorRepeatedPasswordMessage","isEmail","isStrongPassword","validation","setPersistence","browserSessionPersistence","then","createUserWithEmailAndPassword","userCredential","setDoc","doc","getFirestore","catch","signInWithEmailAndPassword","EventInfo","data","isActive","eventsUpdate","archiveUpdate","url","dataBase","dataToSet","name","place","date","guests","tasks","setData","stateSetter","id","deleteData","filter","to","title","addDoc","collection","eventToSet","deleteDoc","archiveToSet","Information","eventId","updateEvent","eventName","setEventName","eventPlace","setEventPlace","substr","eventDate","setEventDate","isEditName","setIsEditName","isEditPlace","setIsEditPlace","isEditDate","setIsEditDate","saveData","variableName","variable","isToSet","updateDoc","map","placeholder","maxLength","e","Task","task","eventUpdate","isDone","description","cost","arrayRemove","arrayUnion","singleTask","Tasks","isAddTask","setIsAddTask","taskName","setTaskName","taskDescription","setTaskDescription","taskCost","setTaskCost","isValid","setIsValid","Date","now","parseFloat","toFixed","push","Guest","guest","singleGuest","Guests","isAddGuest","setIsAddGuest","guestName","setGuestName","Cost","reduce","allCost","singleCost","Event","Events","events","isArchive","updateEvents","updateArchive","isAddEvent","setIsAddEvent","setIsValidate","useRouteMatch","path","singleEvent","exact","dataFromSetting","Home","showMenu","setShowMenu","eventsList","setEventsList","archiveList","setArchiveList","getDocs","allEvents","sort","a","b","handleShowMenu","checked","htmlFor","signOut","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c064cce2.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nrequire('dotenv').config();\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_API_DOMAIN,\n    projectId: process.env.REACT_APP_API_ID,\n    storageBucket: process.env.REACT_APP_API_BUCKET,\n    messagingSenderId: process.env.REACT_APP_API_MESSID,\n    appId: process.env.REACT_APP_API_APPID\n};\n\nconst appBase = initializeApp(firebaseConfig);\n\nexport default appBase;","import {useState, useEffect} from \"react\";\nimport {getAuth, onAuthStateChanged} from \"firebase/auth\";\n\nexport function useUserStatus() {\n    const [checkAuth, setCheckAuth] = useState({isLogIn: false, userId: \"\"});\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(getAuth(), (user) => {\n            if (user) {\n                setCheckAuth({isLogIn: true, userId: user.uid});\n            } else {\n                setCheckAuth({isLogIn: false, userId: \"\"});\n            }\n        });\n        return () => unsubscribe();\n    },[]);\n\n    return checkAuth;\n}","import isEmail from \"validator/es/lib/isEmail\";\nimport isStrongPassword from \"validator/es/lib/isStrongPassword\";\nimport isEmpty from \"validator/es/lib/isEmpty\";\n\nconst validation = (email, password, repeatedPassword) => {\n    let isValidate = true;\n    let errorLoginMessage = \"\";\n    let errorPasswordMessage = \"\";\n    let errorRepeatedPasswordMessage = \"\";\n\n    if (!isEmail(email)) {\n        isValidate = false;\n        errorLoginMessage = \"Niepoprawny adres email\";\n    }\n\n    if (password === \"\" || !isStrongPassword(password)) {\n        isValidate = false;\n        errorPasswordMessage = \"Hasło jest za słabe\";\n    }\n\n    if (repeatedPassword === \"\" || repeatedPassword !== password) {\n        isValidate = false;\n        errorRepeatedPasswordMessage = \"Hasła nie są takie same\";\n    }\n\n    return {\n        isValidate,\n        errorLoginMessage,\n        errorPasswordMessage,\n        errorRepeatedPasswordMessage\n    }\n}\n\nconst eventValidation = (...inputs) => {\n    let isValidate = true;\n    inputs.forEach(input => {\n        if (isEmpty(input) || input.length > 50) {\n            isValidate = false;\n        }\n    });\n    return isValidate;\n}\n\nexport {\n    validation,\n    eventValidation\n}","export default __webpack_public_path__ + \"static/media/logo.c8c72d32.png\";","import React, {useState} from \"react\";\nimport \"./logBox.scss\";\nimport {validation} from \"../validation\";\nimport logo from \"../images/logo.png\"\nimport {getFirestore} from \"firebase/firestore\"\nimport {doc, setDoc} from \"firebase/firestore\";\nimport {\n    getAuth,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    setPersistence,\n    browserSessionPersistence\n} from \"firebase/auth\";\n\nexport const LogBox = () => {\n    const [newUserForm, setNewUserForm] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [wrongEmailMessage, setWrongEmailMessage] = useState(\"\");\n    const [wrongPasswordMessage, setWrongPasswordMessage] = useState(\"\");\n    const [wrongAgainPasswordMessage, setWrongAgainPasswordMessage] = useState(\"\");\n    const [loginInError, setLogInError] = useState(false);\n    const [loginInErrorMessage, setLogInErrorMessage] = useState(\"\");\n    const auth = getAuth();\n\n    const formChanger = event => {\n        event.preventDefault();\n        setNewUserForm(prev => !prev);\n        setWrongEmailMessage(\"\");\n        setWrongPasswordMessage(\"\");\n        setWrongAgainPasswordMessage(\"\");\n        setLogInError(false);\n        setLogInErrorMessage(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setRepeatPassword(\"\");\n    }\n\n    const handleLogBtn = event => {\n        event.preventDefault();\n        setPersistence(auth, browserSessionPersistence).then(() => {\n            return signInWithEmailAndPassword(auth, email, password)\n                .then()\n                .catch(() => {\n                    setLogInError(true);\n                    setLogInErrorMessage(\"Niepoprawne dane\");\n                });\n        });\n    }\n\n    const handleNewUserBtn = event => {\n        event.preventDefault();\n        setWrongEmailMessage(\"\");\n        setWrongPasswordMessage(\"\");\n        setWrongAgainPasswordMessage(\"\");\n        const {\n            isValidate,\n            errorLoginMessage,\n            errorPasswordMessage,\n            errorRepeatedPasswordMessage\n        } = validation(email, password, repeatPassword);\n        if (!isValidate) {\n            setWrongEmailMessage(errorLoginMessage);\n            setWrongPasswordMessage(errorPasswordMessage);\n            setWrongAgainPasswordMessage(errorRepeatedPasswordMessage);\n            return;\n        }\n        setPersistence(auth, browserSessionPersistence).then(() => {\n            return createUserWithEmailAndPassword(getAuth(), email, password)\n                .then((userCredential) => {\n                    setDoc(doc(getFirestore(), \"users\", `${userCredential.user.uid}`), {}).then();\n                })\n                .catch(() => {\n                    setLogInError(true);\n                    setLogInErrorMessage(\"Wystąpił błąd. Sprubuj ponownie\");\n                });\n        });\n    }\n\n    return (\n        <div className=\"logBox\">\n            <div className=\"logBox--content\">\n                <div className=\"logBox--bar\"/>\n                <div className=\"logBox--logo\">\n                    <img src={logo} alt=\"Event planner logo\"/>\n                    <h1>Event<br/>Planner</h1>\n                </div>\n                <form className=\"logBox--form\">\n                    <p>Email:</p>\n                    <input type=\"email\" value={email} onChange={event => setEmail(event.target.value)}/>\n                    <p className=\"logBox--wrongInput\">{wrongEmailMessage}</p>\n                    <p>Hasło:</p>\n                    <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\n                    <p className=\"logBox--wrongInput\">{wrongPasswordMessage}</p>\n                    {newUserForm && (\n                        <>\n                            <p className=\"logBox--infoBox\">Hasło powinno mieć:<br/>min. 8 znaków, 1 dużą literę,<br/>1 cyfrę\n                                i 1 znak specjalny</p>\n                            <p>Potwierdź hasło:</p>\n                            <input type=\"password\" value={repeatPassword}\n                                onChange={event => setRepeatPassword(event.target.value)}/>\n                            <p className=\"logBox--wrongInput\">{wrongAgainPasswordMessage}</p>\n                        </>\n                    )}\n                    {loginInError && <p className=\"logBox--wrongInput\">{loginInErrorMessage}</p>}\n                    <div className=\"logBox--buttons\">\n                        {newUserForm ? (\n                            <>\n                                <button onClick={handleNewUserBtn}>Utwórz</button>\n                                <button onClick={formChanger}>Wróć</button>\n                            </>\n                        ) : (\n                            <>\n                                <button onClick={handleLogBtn}>Zaloguj się</button>\n                                <button onClick={formChanger}>Załóż konto</button>\n                            </>\n                        )}\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/navLogo.24bfe863.png\";","import React from \"react\";\nimport \"./eventInfo.scss\";\nimport { addDoc, collection, deleteDoc, doc, getFirestore } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\n\nexport const EventInfo = ({user, data, isActive, eventsUpdate, archiveUpdate, url}) => {\n    const dataBase = getFirestore();\n    const dataToSet = {\n        name: data.name,\n        place: data.place,\n        date: data.date,\n        guests: data.guests,\n        tasks: data.tasks\n    }\n\n    const setData = (stateSetter, data, id) => {\n        stateSetter(prev => [...prev, {\n            ...data,\n            id\n        }]);\n    }\n\n    const deleteData = (stateSetter, id) => {\n        stateSetter(prev => prev.filter(event => event.id !== id));\n    }\n\n    const archiveBtnHandler = () => {\n        addDoc(collection(dataBase, \"users\", user, \"archive\"), dataToSet).then(archiveToSet => {\n            setData(archiveUpdate, dataToSet, archiveToSet.id);\n\n            deleteDoc(doc(dataBase, \"users\", user, \"events\", data.id)).then(() => {\n                deleteData(eventsUpdate, data.id);\n            })\n        });\n    }\n\n    const returnBtnHandler = () => {\n        addDoc(collection(dataBase, \"users\", user, \"events\"), dataToSet).then(eventToSet => {\n            setData(eventsUpdate, dataToSet, eventToSet.id);\n\n            deleteDoc(doc(dataBase, \"users\", user, \"archive\", data.id)).then(() => {\n                deleteData(archiveUpdate, data.id);\n            })\n        })\n    }\n\n    const trashBtnHandler = () => {\n        deleteDoc(doc(dataBase, \"users\", user, \"archive\", data.id)).then(() => {\n            deleteData(archiveUpdate, data.id);\n        })\n    }\n\n    return (\n        <div className={`homePage--event ${!isActive && `homePage--archive`}`}>\n            <div className=\"homePage--event__name\">{data.name}</div>\n            <div className=\"homePage--event__place\">Miejsce:<br/>{data.place}</div>\n            <div className=\"homePage--event__date\">Data:<br/>{data.date}</div>\n            <div className=\"homePage--event__guests\">Goście:<br/>{data.guests.length}</div>\n            <div className=\"homePage--event__actions\">\n                {isActive ? (\n                    <Link to={`${url}/${data.id}`}><span className=\"fas fa-edit homePage--event__editIcon\" title=\"Edytuj\" /></Link>\n                ) : (\n                    <span className=\"fas fa-undo-alt\" title=\"Cofnij z archiwum\" onClick={returnBtnHandler} />\n                )}\n                \n                <span className={`fas fa-${isActive ? `archive` : `trash`}`}\n                title={isActive ? \"Do archiwum\" : \"Usuń\"} \n                onClick={isActive ? archiveBtnHandler : trashBtnHandler} />\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport \"./information.scss\";\nimport { doc, updateDoc, getFirestore } from \"firebase/firestore\";\nimport { eventValidation } from \"../validation\";\n\nexport const Information = ({user, eventId, name, place, date, updateEvent}) => {\n    const [eventName, setEventName] = useState(name);\n    const [eventPlace, setEventPlace] = useState(place);\n    const [eventDate, setEventDate] = useState(`${date.substr(6, 4)}-${date.substr(3, 2)}-${date.substr(0, 2)}`);\n    const [isEditName, setIsEditName] = useState(false);\n    const [isEditPlace, setIsEditPlace] = useState(false);\n    const [isEditDate, setIsEditDate] = useState(false);\n\n    const saveData = (userId, id, variableName, variable, value, isToSet, setData) => {\n        if (isToSet && variable !== value) {\n            updateDoc(doc(getFirestore(), \"users\", userId, \"events\", id), {[variableName] : value}).then(() => {\n                setData(prev => {\n                    return prev.map(event => {\n                       if (event.id === id) {\n                            event = {\n                               ...event,\n                               [variableName] : value\n                           }\n                       }\n                       return event;\n                   });\n               });\n            })\n        }\n    }\n\n    const nameEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventName)) {\n            return;\n        }\n        saveData(user, eventId, \"name\", name, eventName, isEditName, updateEvent);\n        setIsEditName(prev => !prev);\n    }\n\n    const placeEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventPlace)) {\n            return;\n        }\n        saveData(user, eventId, \"place\", place, eventPlace, isEditPlace, updateEvent);\n        setIsEditPlace(prev => !prev);\n    }\n\n    const dateEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventDate)) {\n            return;\n        }\n        saveData(user, eventId, \"date\", date, `${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`,\n        isEditDate, updateEvent);\n        setIsEditDate(prev => !prev);\n    }\n\n    return (\n        <div className=\"eventPage--content eventPage--information\">\n            <div className=\"eventPage--bar\"/>\n            <form>\n                <div className=\"eventPage--information__tittle\">\n                    <h3>Nazwa wydarzenia:</h3>\n                    <button onClick={nameEditBtn}>{isEditName ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditName ? <input type=\"text\" placeholder=\"Wydarzenie musi mieć nazwę\" maxLength={50} value={eventName} \n                onChange={e => setEventName(e.target.value)} /> : <h5>{eventName}</h5>}\n                <div className=\"eventPage--information__tittle\">\n                    <h3>Miejsce wydarzenia:</h3>\n                    <button onClick={placeEditBtn}>{isEditPlace ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditPlace ? <input type=\"text\" placeholder=\"Wydarzenie musi mieć miejsce\" maxLength={50} value={eventPlace} \n                onChange={e => setEventPlace(e.target.value)} /> : <h5>{eventPlace}</h5>}\n                <div className=\"eventPage--information__tittle\">\n                    <h3>Data wydarzenia:</h3>\n                    <button onClick={dateEditBtn}>{isEditDate ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditDate ? <input type=\"date\" value={eventDate} onChange={e => setEventDate(e.target.value)} /> : (\n                    <h5>{`${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`}</h5>)}\n            </form>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./task.scss\";\nimport { doc, updateDoc, arrayUnion, arrayRemove, getFirestore } from \"firebase/firestore\";\n\nexport const Task = ({userId, eventId, task, eventUpdate}) => {\n    const doneBtnHandler = () => {\n        const dataToSet = {\n            ...task,\n            isDone: !task.isDone\n        }\n\n        updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            tasks: arrayRemove(task)\n        }).then(() => {\n            updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n                tasks: arrayUnion(dataToSet)\n            }).then(() => {\n                eventUpdate(prev => prev.map(event => {\n                    if (event.id === eventId) {\n                        event.tasks = event.tasks.map(singleTask => {\n                            if (singleTask.id === task.id) {\n                                return dataToSet;\n                            }\n                            return singleTask;\n                        });\n                    }\n                    return event;\n                }));\n            });\n        });\n    }\n\n    const trashBtnHandler = () => {\n        updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            tasks: arrayRemove(task)\n        }).then(() => {\n            eventUpdate(prev => {\n                return prev.map(event => {\n                    if (event.id === eventId) {\n                         event.tasks = event.tasks.filter(singleTask => singleTask.id !== task.id);\n                    }\n                    return event;\n                });\n            });\n        });\n    }\n\n    return (\n        <div className={`eventPage--task ${task.isDone && `eventPage--task__inActive`}`}>\n            <div className=\"eventPage--task__info\">\n                <div className=\"eventPage--task__name\">{task.name}</div>\n                <div className=\"eventPage--task__description\">{task.description}</div>\n            </div>\n            <div className=\"eventPage--task__cost\">\n                {(task.cost !== \"\") && task.cost}\n            </div>\n            <div className=\"eventPage--task__actions\">\n                <span className={`${task.isDone ? `fas` : `far`} fa-check-square`} title=\"Wykonane\" onClick={doneBtnHandler} />\n                <span className=\"fas fa-trash\" title=\"Usuń\" onClick={trashBtnHandler} />\n            </div>\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport \"./tasks.scss\";\nimport { eventValidation } from \"../validation\";\nimport { doc, updateDoc, arrayUnion, getFirestore } from \"firebase/firestore\";\nimport { Task } from \"../Task/Task\";\n\nexport const Tasks = ({user, eventId, tasks, updateEvent}) => {\n    const [isAddTask, setIsAddTask] = useState(false);\n    const [taskName, setTaskName] = useState(\"\");\n    const [taskDescription, setTaskDescription] = useState(\"\");\n    const [taskCost, setTaskCost] = useState(\"\");\n    const [isValid, setIsValid] = useState(true);\n\n    const addTaskBtnHandler = () => {\n        setIsAddTask(prev => !prev);\n        setTaskName(\"\");\n        setTaskDescription(\"\");\n        setTaskCost(\"\");\n        if (!isValid) {\n            setIsValid(true);\n        }\n    }\n\n    const saveTaskBtnHandler = event => {\n        event.preventDefault();\n        if (!eventValidation(taskName, taskDescription)) {\n            setIsValid(false);\n            return;\n        }\n\n        const dataToSet = {\n            id: Date.now(),\n            name: taskName,\n            description: taskDescription,\n            cost: taskCost === \"\" ? 0 : parseFloat(parseFloat(taskCost).toFixed(2)),\n            isDone: false\n        }\n\n        updateDoc(doc(getFirestore(), \"users\", user, \"events\", eventId), {\n            tasks: arrayUnion(dataToSet)\n        }).then(() => {\n            updateEvent(prev => {\n                return prev.map(event => {\n                    if (event.id === eventId) {\n                        event.tasks.push(dataToSet);\n                    }\n                    return event;\n                });\n            })\n        })\n\n        setIsAddTask(false);\n        setIsValid(true);\n    }\n\n    return (\n        <div className=\"eventPage--content eventPage--tasks\">\n            <div className=\"eventPage--bar\"/>\n            <div className=\"eventPage--tasksContent\">\n                <button className=\"eventPage--tasks__addTask\" onClick={addTaskBtnHandler}>Dodaj zadanie</button>\n                {isAddTask && (\n                    <form className=\"eventPage--tasks__new\">\n                        <label className=\"eventPage--tasks__newTittle\">\n                            <h3>Nazwa:</h3>\n                            <input type=\"text\" maxLength={50} value={taskName} onChange={event => setTaskName(event.target.value)} />\n                        </label>\n                        <label className=\"eventPage--tasks__newTittle\">\n                            <h3>Opis:</h3>\n                            <input type=\"text\" maxLength={50} value={taskDescription} \n                            onChange={event => setTaskDescription(event.target.value)} />\n                        </label>\n                        <label className=\"eventPage--tasks__newTittle\">\n                            <h3>Kwota:</h3>\n                            <input type=\"number\" placeholder=\"Opcjonalnie\" maxLength={50} value={taskCost} \n                            onChange={event => setTaskCost(event.target.value)} />\n                        </label>\n                        <button className=\"eventPage--tasks__newSaveBtn\" onClick={saveTaskBtnHandler}>Dodaj</button>\n                        {!isValid && <p className=\"eventPage--tasks__wrongInput\">Pola nazwy i opisu nie mogą być puste!</p>}\n                    </form>\n                )}\n                <div className=\"eventPage--tasks__list\">\n                    <h3 className=\"eventPage--tasks__listTittle\">Lista zadań:</h3>\n                    {tasks.map(singleTask => <Task key={singleTask.id} userId={user} eventId={eventId} task={singleTask}\n                    eventUpdate={updateEvent} />)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./guest.scss\";\nimport { doc, updateDoc, arrayRemove, getFirestore } from \"firebase/firestore\";\n\nexport const Guest = ({userId, eventId, guest, eventUpdate}) => {\n    const deleteGuestBtnHandler = () => {\n        updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            guests: arrayRemove(guest)\n        }).then(() => {\n            eventUpdate(prev => prev.map(event => {\n                if (event.id === eventId) {\n                    event.guests = event.guests.filter(singleGuest => singleGuest.id !== guest.id);\n                }\n                return event;\n            }));\n        });\n    }\n\n    return (\n        <div className=\"eventPage--guest\">\n            <h3>{guest.name}</h3>\n            <span className=\"fas fa-trash\" title=\"Usuń\" onClick={deleteGuestBtnHandler} />\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport \"./guests.scss\";\nimport { eventValidation } from \"../validation\";\nimport { doc, updateDoc, arrayUnion, getFirestore } from \"firebase/firestore\";\nimport { Guest } from \"../Guest/Guest\";\n\nexport const Guests = ({user, eventId, guests, updateEvent}) => {\n    const [isAddGuest, setIsAddGuest] = useState(false);\n    const [guestName, setGuestName] = useState(\"\");\n    const [isValid, setIsValid] = useState(true);\n\n    const addGuestBtnHandler = () => {\n        setIsAddGuest(prev => !prev);\n        setGuestName(\"\");\n        !isValid && setIsValid(true);\n    }\n\n    const saveGuestBtnHandler = event => {\n        event.preventDefault();\n\n        if (!eventValidation(guestName)) {\n            setIsValid(false);\n            return;\n        }\n\n        const dataToSet = {\n            id: Date.now(),\n            name: guestName\n        }\n\n        updateDoc(doc(getFirestore(), \"users\", user, \"events\", eventId), {\n            guests: arrayUnion(dataToSet)\n        }).then(() => {\n            updateEvent(prev => prev.map(event => {\n                if (event.id === eventId) {\n                    event.guests.push(dataToSet);\n                }\n                return event;\n            }));\n        });\n\n        setIsAddGuest(false);\n        setGuestName(\"\");\n        !isValid && setIsValid(true);\n    }\n\n    return (\n        <div className=\"eventPage--content eventPage--guests\">\n            <div className=\"eventPage--bar\"/>\n            <div className=\"eventPage--guestsContent\">\n                <button className=\"eventPage--guests__addGuest\" onClick={addGuestBtnHandler}>Dodaj gościa</button>\n                {isAddGuest && (\n                    <form className=\"eventPage--guests__new\">\n                        <div className=\"eventPage--guestes__newInputs\">\n                            <label className=\"eventPage--guests__newTittle\">\n                                <h3>Imię i nazwisko:</h3>\n                                <input type=\"text\" maxLength={50} value={guestName} onChange={event => setGuestName(event.target.value)} />\n                            </label>\n                            <button className=\"eventPage--guests__newGuestBtn\" onClick={saveGuestBtnHandler}>Dodaj</button>\n                        </div>\n                        {!isValid && <p className=\"eventPage--guests__wrongInput\">Pole nie może być puste!</p>}\n                </form>\n                )}\n                <div className=\"eventPage--guests__list\">\n                    <h3 className=\"eventPage--guests__listTittle\">Lista gości ({guests.length} {guests.length > 4 || guests.length < 2 \n                    ? (guests.length === 1 ? \"osoba\" : \"osób\") : \"osoby\"}):</h3>\n                    {guests.map(singleGuest => <Guest key={singleGuest.id} userId={user} eventId={eventId} guest={singleGuest}\n                    eventUpdate={updateEvent} />)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./cost.scss\";\n\nexport const Cost = ({tasks}) => {\n\n    return (\n        <div className=\"eventPage--content eventPage--cost\">\n            <div className=\"eventPage--bar\"/>\n            <div className=\"eventPage--costContent\">\n                <div className=\"eventPage--cost__main\">\n                    <h3>Koszty:</h3>\n                    <h3 className=\"eventPage--cost__mainCost\">{tasks.reduce((allCost, singleCost) => allCost + singleCost.cost, 0)} zł</h3>\n                </div>\n                <h3 className=\"eventPage--cost__singleTitle\">Szczegółowe koszty:</h3>\n                <ul className=\"eventPage--cost__single\">\n                    {tasks.map(task => task.cost !== 0 && <li key={task.id}>\n                    <span className=\"fas fa-caret-right\"/>{task.name} - <span className=\"eventPage--cost__singleCost\">{task.cost} zł</span>\n                    </li>)}\n                </ul>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./event.scss\";\nimport { Information } from \"../Information/Information\";\nimport { Tasks } from \"../Tasks/Tasks\";\nimport { Guests } from \"../Guests/Guests\";\nimport { Cost } from \"../Cost/Cost\";\n\nexport const Event = ({userId, id, name, place, date, tasks, guests, eventUpdate }) => {\n  return (\n    <div className=\"eventPage\">\n      <div className=\"eventPage--leftContent\">\n        <Information user={userId} eventId={id} name={name} place={place} date={date} updateEvent={eventUpdate} />\n        <Tasks user={userId} eventId={id} tasks={tasks} updateEvent={eventUpdate} />\n      </div>\n      <div className=\"eventPage--rightContent\">\n        <Guests user={userId} eventId={id} guests={guests} updateEvent={eventUpdate} />\n        <Cost tasks={tasks} />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./events.scss\";\nimport { addDoc, collection, getFirestore } from \"firebase/firestore\";\nimport { eventValidation } from \"../validation\";\nimport { EventInfo } from \"../EventInfo/EventInfo\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { Event } from \"../Event/Event\";\n\nexport const Events = ({user, events, isArchive, updateEvents, updateArchive}) => {\n    const [isAddEvent, setIsAddEvent] = useState(false);\n    const [eventName, setEventName] = useState(\"\");\n    const [eventPlace, setEventPlace] = useState(\"\");\n    const [eventDate, setEventDate] = useState(\"\");\n    const [isValidate, setIsValidate] = useState(true);\n    let {path, url} = useRouteMatch();\n\n    const addEventBtnHandler = event => {\n        event.preventDefault();\n        if (!eventValidation(eventName, eventPlace, eventDate)) {\n            setIsValidate(false);\n            return;\n        }\n\n        const dataToSet = {\n            name: eventName,\n            place: eventPlace,\n            date: `${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`,\n            guests: [],\n            tasks: []\n        }\n\n        addDoc(collection(getFirestore(), \"users\", user, \"events\"), dataToSet).then(dataFromSetting => {\n            updateEvents(prev => [...prev, {\n                ...dataToSet,\n                id: dataFromSetting.id\n            }])\n            setEventName(\"\");\n            setEventPlace(\"\");\n            setEventDate(\"\");\n            setIsValidate(true);\n            setIsAddEvent(false);\n        });\n    }\n    \n    if(!isArchive) {\n        return (\n            <Switch>\n                <Route exact path={path}>\n                    <>\n                        <div className=\"homePage--addEvent\">\n                            <div className=\"homePage--addEvent__btn\" onClick={() => {\n                                setIsAddEvent(prev => !prev);\n                                setIsValidate(true);\n                            }}>\n                            <span className=\"far fa-plus-square\"/>Dodaj wydarzenie\n                        </div>\n                        {isAddEvent && (\n                            <div className=\"homePage--addEvent__box\">\n                                <form>\n                                    <div className=\"homePage--addEvent__input\">\n                                        <h3>Nazwa</h3>\n                                        <input type=\"text\" maxLength={50} value={eventName} onChange={e => setEventName(e.target.value)}/>\n                                    </div>\n                                    <div className=\"homePage--addEvent__input\">\n                                        <h3>Miejsce</h3>\n                                        <input type=\"text\" maxLength={50} value={eventPlace} onChange={e => setEventPlace(e.target.value)}/>\n                                    </div>\n                                    <div className=\"homePage--addEvent__input\">\n                                        <h3>Data</h3>\n                                        <input type=\"date\" value={eventDate} onChange={e => setEventDate(e.target.value)}/>\n                                    </div>\n                                    {!isValidate && <p>Pola nie mogą być puste!</p>}\n                                    <button onClick={addEventBtnHandler}>Dodaj</button>\n                                </form>\n                            </div>\n                        )}\n                        </div>\n                        <div className=\"homePage--events\">\n                            {events.map(singleEvent => <EventInfo key={singleEvent.id} user={user} data={singleEvent} \n                            isActive={true} eventsUpdate={updateEvents} archiveUpdate={updateArchive} url={url}/>)}\n                        </div>\n                    </>\n                </Route>\n                {events.map(singleEvent => <Route key={singleEvent.id} path={`${path}/${singleEvent.id}`}>\n                    <Event userId={user} id={singleEvent.id} name={singleEvent.name} place={singleEvent.place} date={singleEvent.date}\n                        tasks={singleEvent.tasks} guests={singleEvent.guests} eventUpdate={updateEvents}/>\n                </Route>)}\n            </Switch>\n        );\n    }\n    else {\n        return (\n            <div className=\"homePage--events\">\n                {events.map(singleEvent => <EventInfo key={singleEvent.id} user={user} data={singleEvent} \n                isActive={false} eventsUpdate={updateEvents} archiveUpdate={updateArchive}/>)}\n                {events.length === 0 && <h2 className=\"homePage--events__null\">Brak wydarzeń w archiwum</h2>}\n            </div>\n        );\n    }\n}","import React, {useEffect, useState} from \"react\";\nimport \"./home.scss\";\nimport {getAuth, signOut} from \"firebase/auth\";\nimport {Link, Redirect, Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport {useUserStatus} from \"../useUserStatus\";\nimport logo from \"../images/navLogo.png\";\nimport {Events} from \"../Events/Events\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\n\nexport const Home = () => {\n    const {userId} = useUserStatus();\n    let {path, url} = useRouteMatch();\n    const [showMenu, setShowMenu] = useState(false);\n    const [eventsList, setEventsList] = useState([]);\n    const [archiveList, setArchiveList] = useState([]);\n\n    useEffect(() => {\n        if (userId !== \"\") {\n            const dataBase = getFirestore();\n            setEventsList([]);\n            setArchiveList([]);\n            getDocs(collection(dataBase, \"users\", userId, \"events\")).then(allEvents => {\n                allEvents.forEach(singleEvent => {\n                    setEventsList(prev => [...prev, {\n                        ...singleEvent.data(),\n                        id: singleEvent.id,\n                        tasks: singleEvent.data().tasks.sort((a, b) => a.id - b.id)\n                    }]);\n                });\n            });\n            getDocs(collection(dataBase, \"users\", userId, \"archive\")).then(allEvents => {\n                allEvents.forEach(singleEvent => {\n                    setArchiveList(prev => [...prev, {\n                        ...singleEvent.data(),\n                        id: singleEvent.id,\n                        tasks: singleEvent.data().tasks.sort((a, b) => a.id - b.id)\n                    }]);\n                })\n            })\n        }\n    }, [userId]);\n\n    const handleSignOutBtn = () => {\n        const auth = getAuth();\n        signOut(auth).then();\n    }\n\n    const handleShowMenu = () => {\n        setShowMenu(prev => !prev);\n    }\n\n    return (\n        <div className=\"homePage\">\n            <header className=\"homePage--header\">\n                <div className=\"homePage--logo\">\n                    <img src={logo} alt=\"Event planner logo\"/>\n                    <h1>Event<br/>Planner</h1>\n                </div>\n                <input className=\"homePage--menuBtn\" id=\"homePage--menuBtn\" type=\"checkbox\" checked={showMenu} onChange={handleShowMenu}/>\n                <label className=\"homePage--menuIcon\" htmlFor=\"homePage--menuBtn\">\n                    <span className=\"homePage--navIcon\"/>\n                </label>\n                <nav className=\"homePage--nav\">\n                    <ul>\n                        <Link to={`${url}/events`}>\n                            <li onClick={handleShowMenu}>Wydarzenia</li>\n                        </Link>\n                        <Link to={`${url}/archive`}>\n                            <li onClick={handleShowMenu}>Archiwum</li>\n                        </Link>\n                        <li onClick={handleSignOutBtn}>Wyloguj</li>\n                    </ul>\n                </nav>\n            </header>\n            <main className=\"homePage--main\">\n                <Switch>\n                    <Route exact path={path}><Redirect to={`${path}/events`}/></Route>\n                    <Route path={`${path}/events`}>\n                        <Events user={userId} events={eventsList} isArchive={false} updateEvents={data => setEventsList(data)} \n                        updateArchive={data => setArchiveList(data)}/>\n                    </Route>\n                    <Route path={`${path}/archive`}>\n                        <Events user={userId} events={archiveList} isArchive={true} updateEvents={data => setEventsList(data)} \n                        updateArchive={data => setArchiveList(data)}/>\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./app.scss\";\n// eslint-disable-next-line\nimport appBase from \"../firebase\";\nimport {useUserStatus} from \"../useUserStatus\";\nimport {LogBox} from \"../LogBox/LogBox\";\nimport {Home} from \"../Home/Home\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\n\nconst App = () => {\n    const {isLogIn} = useUserStatus();\n\n    return (\n        <HashRouter basename=\"/\">\n            <div className=\"appContainer\">\n                <Switch>\n                    <Route path=\"/home\">\n                        {isLogIn ? <Home /> : <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/\">\n                        {!isLogIn ? <LogBox /> : <Redirect to=\"/home\" />}\n                    </Route>\n                    <Route path=\"/*\">\n                        <Redirect to=\"/\" />\n                    </Route>\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/settings/reset.scss\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}