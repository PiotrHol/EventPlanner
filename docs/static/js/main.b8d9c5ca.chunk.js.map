{"version":3,"sources":["firebase.js","useUserStatus.js","validation.js","images/logo.png","LogBox/LogBox.js","images/navLogo.png","EventInfo/EventInfo.js","Information/Information.js","Task/Task.js","Tasks/Tasks.js","Guest/Guest.js","Guests/Guests.js","Cost/Cost.js","Event/Event.js","Events/Events.js","Home/Home.js","App/App.js","index.js"],"names":["require","config","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","useUserStatus","useState","isLogIn","userId","checkAuth","setCheckAuth","useEffect","unsubscribe","onAuthStateChanged","getAuth","user","uid","eventValidation","isValidate","inputs","forEach","input","isEmpty","length","LogBox","newUserForm","setNewUserForm","email","setEmail","password","setPassword","repeatPassword","setRepeatPassword","wrongEmailMessage","setWrongEmailMessage","wrongPasswordMessage","setWrongPasswordMessage","wrongAgainPasswordMessage","setWrongAgainPasswordMessage","loginInError","setLogInError","loginInErrorMessage","setLogInErrorMessage","auth","formChanger","event","preventDefault","prev","className","src","logo","alt","type","value","onChange","target","onClick","repeatedPassword","errorLoginMessage","errorPasswordMessage","errorRepeatedPasswordMessage","isEmail","isStrongPassword","validation","setPersistence","browserSessionPersistence","then","a","createUserWithEmailAndPassword","userCredential","setDoc","doc","getFirestore","signInWithEmailAndPassword","EventInfo","data","isActive","eventsUpdate","archiveUpdate","url","dataBase","dataToSet","name","place","date","guests","tasks","setData","stateSetter","id","deleteData","filter","archiveBtnHandler","addDoc","collection","archiveToSet","deleteDoc","returnBtnHandler","eventToSet","trashBtnHandler","classNames","to","title","Information","eventId","updateEvent","eventName","setEventName","eventPlace","setEventPlace","substr","eventDate","setEventDate","isEditName","setIsEditName","isEditPlace","setIsEditPlace","isEditDate","setIsEditDate","saveData","variableName","variable","isToSet","updateDoc","map","placeholder","maxLength","e","Task","task","eventUpdate","doneBtnHandler","isDone","arrayRemove","arrayUnion","singleTask","description","Tasks","isAddTask","setIsAddTask","taskName","setTaskName","taskDescription","setTaskDescription","taskCost","setTaskCost","isValid","setIsValid","saveTaskBtnHandler","Date","now","cost","parseFloat","toFixed","push","Guest","guest","deleteGuestBtnHandler","Guests","isAddGuest","setIsAddGuest","guestName","setGuestName","saveGuestBtnHandler","singleGuest","Cost","reduce","allCost","singleCost","Event","Events","events","isArchive","updateEvents","updateArchive","isAddEvent","setIsAddEvent","setIsValidate","useRouteMatch","path","addEventBtnHandler","dataFromSetting","singleEvent","exact","Home","showMenu","setShowMenu","eventsList","setEventsList","archiveList","setArchiveList","fetchData","getDocs","sort","b","handleShowMenu","checked","htmlFor","signOut","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d9c5ca.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nrequire('dotenv').config();\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_API_DOMAIN,\n    projectId: process.env.REACT_APP_API_ID,\n    storageBucket: process.env.REACT_APP_API_BUCKET,\n    messagingSenderId: process.env.REACT_APP_API_MESSID,\n    appId: process.env.REACT_APP_API_APPID\n};\n\nconst appBase = initializeApp(firebaseConfig);\n\nexport default appBase;","import {useState, useEffect} from \"react\";\nimport {getAuth, onAuthStateChanged} from \"firebase/auth\";\n\nexport function useUserStatus() {\n    const [checkAuth, setCheckAuth] = useState({isLogIn: false, userId: \"\"});\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(getAuth(), user => setCheckAuth({isLogIn: !!user, userId : user ? user.uid : \"\"}));\n        return () => unsubscribe();\n    },[]);\n\n    return checkAuth;\n}","import isEmail from \"validator/es/lib/isEmail\";\nimport isStrongPassword from \"validator/es/lib/isStrongPassword\";\nimport isEmpty from \"validator/es/lib/isEmpty\";\n\nconst validation = (email, password, repeatedPassword) => {\n    let isValidate = true;\n    let errorLoginMessage = \"\";\n    let errorPasswordMessage = \"\";\n    let errorRepeatedPasswordMessage = \"\";\n\n    if (!isEmail(email)) {\n        isValidate = false;\n        errorLoginMessage = \"Niepoprawny adres email\";\n    }\n\n    if (!password || !isStrongPassword(password)) {\n        isValidate = false;\n        errorPasswordMessage = \"Hasło jest za słabe\";\n    }\n\n    if (!repeatedPassword || repeatedPassword !== password) {\n        isValidate = false;\n        errorRepeatedPasswordMessage = \"Hasła nie są takie same\";\n    }\n\n    return {\n        isValidate,\n        errorLoginMessage,\n        errorPasswordMessage,\n        errorRepeatedPasswordMessage\n    }\n}\n\nconst eventValidation = (...inputs) => {\n    let isValidate = true;\n    inputs.forEach(input => {\n        if (isEmpty(input) || input.length > 50) {\n            isValidate = false;\n        }\n    });\n    return isValidate;\n}\n\nexport {\n    validation,\n    eventValidation\n}","export default __webpack_public_path__ + \"static/media/logo.c8c72d32.png\";","import React, {useState} from \"react\";\nimport \"./logBox.scss\";\nimport {validation} from \"../validation\";\nimport logo from \"../images/logo.png\"\nimport {getFirestore} from \"firebase/firestore\"\nimport {doc, setDoc} from \"firebase/firestore\";\nimport {\n    getAuth,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    setPersistence,\n    browserSessionPersistence\n} from \"firebase/auth\";\n\nexport const LogBox = () => {\n    const [newUserForm, setNewUserForm] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [wrongEmailMessage, setWrongEmailMessage] = useState(\"\");\n    const [wrongPasswordMessage, setWrongPasswordMessage] = useState(\"\");\n    const [wrongAgainPasswordMessage, setWrongAgainPasswordMessage] = useState(\"\");\n    const [loginInError, setLogInError] = useState(false);\n    const [loginInErrorMessage, setLogInErrorMessage] = useState(\"\");\n    const auth = getAuth();\n\n    const formChanger = event => {\n        event.preventDefault();\n        setNewUserForm(prev => !prev);\n        setWrongEmailMessage(\"\");\n        setWrongPasswordMessage(\"\");\n        setWrongAgainPasswordMessage(\"\");\n        setLogInError(false);\n        setLogInErrorMessage(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setRepeatPassword(\"\");\n    }\n\n    const handleLogBtn = event => {\n        event.preventDefault();\n        setPersistence(auth, browserSessionPersistence).then(async () => {\n            try {\n                return await signInWithEmailAndPassword(auth, email, password);\n            } catch {\n                setLogInError(true);\n                setLogInErrorMessage(\"Niepoprawne dane\");\n            }\n        });\n    }\n\n    const handleNewUserBtn = event => {\n        event.preventDefault();\n        setWrongEmailMessage(\"\");\n        setWrongPasswordMessage(\"\");\n        setWrongAgainPasswordMessage(\"\");\n        const {\n            isValidate,\n            errorLoginMessage,\n            errorPasswordMessage,\n            errorRepeatedPasswordMessage\n        } = validation(email, password, repeatPassword);\n        if (!isValidate) {\n            setWrongEmailMessage(errorLoginMessage);\n            setWrongPasswordMessage(errorPasswordMessage);\n            setWrongAgainPasswordMessage(errorRepeatedPasswordMessage);\n            return;\n        }\n        setPersistence(auth, browserSessionPersistence).then(async () => {\n            try {\n                const userCredential = await createUserWithEmailAndPassword(getAuth(), email, password);\n                await setDoc(doc(getFirestore(), \"users\", `${userCredential.user.uid}`), {});\n            }\n            catch {\n                setLogInError(true);\n                setLogInErrorMessage(\"Wystąpił błąd. Sprubuj ponownie\");\n            }\n        });\n    }\n\n    return (\n        <div className=\"log-box\">\n            <div className=\"log-box__content\">\n                <div className=\"log-box__bar\"/>\n                <div className=\"log-box__logo\">\n                    <img src={logo} alt=\"Event planner logo\"/>\n                    <h1>Event<br/>Planner</h1>\n                </div>\n                <form className=\"log-box__form\">\n                    <p>Email:</p>\n                    <input type=\"email\" value={email} onChange={event => setEmail(event.target.value)}/>\n                    <p className=\"log-box__wrong-input\">{wrongEmailMessage}</p>\n                    <p>Hasło:</p>\n                    <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\n                    <p className=\"log-box__wrong-input\">{wrongPasswordMessage}</p>\n                    {newUserForm && (\n                        <>\n                            <p className=\"log-box__info-box\">Hasło powinno mieć:<br/>min. 8 znaków, 1 dużą literę,<br/>1 cyfrę\n                                i 1 znak specjalny</p>\n                            <p>Potwierdź hasło:</p>\n                            <input type=\"password\" value={repeatPassword}\n                                onChange={event => setRepeatPassword(event.target.value)}/>\n                            <p className=\"log-box__wrong-input\">{wrongAgainPasswordMessage}</p>\n                        </>\n                    )}\n                    {loginInError && <p className=\"log-box__wrong-input\">{loginInErrorMessage}</p>}\n                    <div className=\"log-box__buttons\">\n                        {newUserForm ? (\n                            <>\n                                <button onClick={handleNewUserBtn}>Utwórz</button>\n                                <button onClick={formChanger}>Wróć</button>\n                            </>\n                        ) : (\n                            <>\n                                <button onClick={handleLogBtn}>Zaloguj się</button>\n                                <button onClick={formChanger}>Załóż konto</button>\n                            </>\n                        )}\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/navLogo.24bfe863.png\";","import React from \"react\";\nimport \"./eventInfo.scss\";\nimport { addDoc, collection, deleteDoc, doc, getFirestore } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nexport const EventInfo = ({user, data, isActive, eventsUpdate, archiveUpdate, url}) => {\n    const dataBase = getFirestore();\n    const dataToSet = {\n        name: data.name,\n        place: data.place,\n        date: data.date,\n        guests: data.guests,\n        tasks: data.tasks\n    }\n\n    const setData = (stateSetter, data, id) => {\n        stateSetter(prev => [...prev, {\n            ...data,\n            id\n        }]);\n    }\n\n    const deleteData = (stateSetter, id) => {\n        stateSetter(prev => prev.filter(event => event.id !== id));\n    }\n\n    const archiveBtnHandler = async () => {\n        const archiveToSet = await addDoc(collection(dataBase, \"users\", user, \"archive\"), dataToSet);\n        setData(archiveUpdate, dataToSet, archiveToSet.id);\n        await deleteDoc(doc(dataBase, \"users\", user, \"events\", data.id));\n        deleteData(eventsUpdate, data.id);\n    }\n\n    const returnBtnHandler = async () => {\n        const eventToSet = await addDoc(collection(dataBase, \"users\", user, \"events\"), dataToSet);\n        setData(eventsUpdate, dataToSet, eventToSet.id);\n        await deleteDoc(doc(dataBase, \"users\", user, \"archive\", data.id));\n        deleteData(archiveUpdate, data.id);\n    }\n\n    const trashBtnHandler = async () => {\n        await deleteDoc(doc(dataBase, \"users\", user, \"archive\", data.id));\n        deleteData(archiveUpdate, data.id);\n    }\n\n    return (\n        <div className={classNames(\"home-page__event\", {\"home-page__archive\": !isActive})}>\n            <div className=\"home-page__event-name\">{data.name}</div>\n            <div className=\"home-page__event-place\">Miejsce:<br/>{data.place}</div>\n            <div className=\"home-page__event-date\">Data:<br/>{data.date}</div>\n            <div className=\"home-page__event-guests\">Goście:<br/>{data.guests.length}</div>\n            <div className=\"home-page__event-actions\">\n                {isActive ? (\n                    <Link to={`${url}/${data.id}`}><span className=\"fas fa-edit home-page__event-edit-icon\" title=\"Edytuj\" /></Link>\n                ) : (\n                    <span className=\"fas fa-undo-alt\" title=\"Cofnij z archiwum\" onClick={returnBtnHandler} />\n                )}\n                \n                <span className={classNames(\"fas\", {\"fa-archive\": isActive, \"fa-trash\": !isActive})}\n                title={isActive ? \"Do archiwum\" : \"Usuń\"} \n                onClick={isActive ? archiveBtnHandler : trashBtnHandler} />\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport \"./information.scss\";\nimport { doc, updateDoc, getFirestore } from \"firebase/firestore\";\nimport { eventValidation } from \"../validation\";\n\nexport const Information = ({user, eventId, name, place, date, updateEvent}) => {\n    const [eventName, setEventName] = useState(name);\n    const [eventPlace, setEventPlace] = useState(place);\n    const [eventDate, setEventDate] = useState(`${date.substr(6, 4)}-${date.substr(3, 2)}-${date.substr(0, 2)}`);\n    const [isEditName, setIsEditName] = useState(false);\n    const [isEditPlace, setIsEditPlace] = useState(false);\n    const [isEditDate, setIsEditDate] = useState(false);\n\n    const saveData = async (userId, id, variableName, variable, value, isToSet, setData) => {\n        if (isToSet && variable !== value) {\n            await updateDoc(doc(getFirestore(), \"users\", userId, \"events\", id), {[variableName] : value});\n            setData(prev => {\n                return prev.map(event => {\n                   if (event.id === id) {\n                        event = {\n                           ...event,\n                           [variableName] : value\n                       }\n                   }\n                   return event;\n               });\n           });\n        }\n    }\n\n    const nameEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventName)) {\n            return;\n        }\n        saveData(user, eventId, \"name\", name, eventName, isEditName, updateEvent);\n        setIsEditName(prev => !prev);\n    }\n\n    const placeEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventPlace)) {\n            return;\n        }\n        saveData(user, eventId, \"place\", place, eventPlace, isEditPlace, updateEvent);\n        setIsEditPlace(prev => !prev);\n    }\n\n    const dateEditBtn = event => {\n        event.preventDefault();\n        if (!eventValidation(eventDate)) {\n            return;\n        }\n        saveData(user, eventId, \"date\", date, `${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`,\n        isEditDate, updateEvent);\n        setIsEditDate(prev => !prev);\n    }\n\n    return (\n        <div className=\"event-page__content event-page__information\">\n            <div className=\"event-page__bar\"/>\n            <form>\n                <div className=\"event-page__information-title\">\n                    <h3>Nazwa wydarzenia:</h3>\n                    <button onClick={nameEditBtn}>{isEditName ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditName ? <input type=\"text\" placeholder=\"Wydarzenie musi mieć nazwę\" maxLength={50} value={eventName} \n                onChange={e => setEventName(e.target.value)} /> : <h5>{eventName}</h5>}\n                <div className=\"event-page__information-title\">\n                    <h3>Miejsce wydarzenia:</h3>\n                    <button onClick={placeEditBtn}>{isEditPlace ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditPlace ? <input type=\"text\" placeholder=\"Wydarzenie musi mieć miejsce\" maxLength={50} value={eventPlace} \n                onChange={e => setEventPlace(e.target.value)} /> : <h5>{eventPlace}</h5>}\n                <div className=\"event-page__information-title\">\n                    <h3>Data wydarzenia:</h3>\n                    <button onClick={dateEditBtn}>{isEditDate ? \"Zapisz\" : \"Edytuj\"}</button>\n                </div>\n                {isEditDate ? <input type=\"date\" value={eventDate} onChange={e => setEventDate(e.target.value)} /> : (\n                    <h5>{`${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`}</h5>)}\n            </form>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./task.scss\";\nimport { doc, updateDoc, arrayUnion, arrayRemove, getFirestore } from \"firebase/firestore\";\nimport classNames from \"classnames\";\n\nexport const Task = ({userId, eventId, task, eventUpdate}) => {\n    const doneBtnHandler = async () => {\n        const dataToSet = {\n            ...task,\n            isDone: !task.isDone\n        }\n\n        await updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            tasks: arrayRemove(task)\n        });\n\n        await updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            tasks: arrayUnion(dataToSet)\n        });\n\n        eventUpdate(prev => prev.map(event => {\n            if (event.id === eventId) {\n                event.tasks = event.tasks.map(singleTask => {\n                    if (singleTask.id === task.id) {\n                        return dataToSet;\n                    }\n                    return singleTask;\n                });\n            }\n            return event;\n        }));\n    }\n\n    const trashBtnHandler = async () => {\n        await updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            tasks: arrayRemove(task)\n        });\n        eventUpdate(prev => {\n            return prev.map(event => {\n                if (event.id === eventId) {\n                    event.tasks = event.tasks.filter(({id}) => id !== task.id);\n                }\n                return event;\n            });\n        });\n    }\n\n    return (\n        <div className={classNames(\"event-page__task\", {\"event-page__task--inActive\": task.isDone})}>\n            <div className=\"event-page__task-info\">\n                <div className=\"event-page__task-name\">{task.name}</div>\n                <div className=\"event-page__task-description\">{task.description}</div>\n            </div>\n            <div className=\"event-page__task-actions\">\n                <span className={classNames({\"fas\": task.isDone, \"far\": !task.isDone}, \"fa-check-square\")} \n                title=\"Wykonane\" onClick={doneBtnHandler} />\n                <span className=\"fas fa-trash\" title=\"Usuń\" onClick={trashBtnHandler} />\n            </div>\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport \"./tasks.scss\";\nimport { eventValidation } from \"../validation\";\nimport { doc, updateDoc, arrayUnion, getFirestore } from \"firebase/firestore\";\nimport { Task } from \"../Task/Task\";\n\nexport const Tasks = ({user, eventId, tasks, updateEvent}) => {\n    const [isAddTask, setIsAddTask] = useState(false);\n    const [taskName, setTaskName] = useState(\"\");\n    const [taskDescription, setTaskDescription] = useState(\"\");\n    const [taskCost, setTaskCost] = useState(\"\");\n    const [isValid, setIsValid] = useState(true);\n\n    const addTaskBtnHandler = () => {\n        setIsAddTask(prev => !prev);\n        setTaskName(\"\");\n        setTaskDescription(\"\");\n        setTaskCost(\"\");\n        !isValid && setIsValid(true);\n    }\n\n    const saveTaskBtnHandler = async (event) => {\n        event.preventDefault();\n        if (!eventValidation(taskName, taskDescription)) {\n            setIsValid(false);\n            return;\n        }\n\n        const dataToSet = {\n            id: Date.now(),\n            name: taskName,\n            description: taskDescription,\n            cost: !taskCost ? 0 : parseFloat(parseFloat(taskCost).toFixed(2)),\n            isDone: false\n        }\n\n        await updateDoc(doc(getFirestore(), \"users\", user, \"events\", eventId), {\n            tasks: arrayUnion(dataToSet)\n        })\n        \n        updateEvent(prev => {\n            return prev.map(event => {\n                if (event.id === eventId) {\n                    event.tasks.push(dataToSet);\n                }\n                return event;\n            });\n        });\n\n        setIsAddTask(false);\n        setIsValid(true);\n    }\n\n    return (\n        <div className=\"event-page__content event-page__tasks\">\n            <div className=\"event-page__bar\"/>\n            <div className=\"event-page__tasks-content\">\n                <button className=\"event-page__tasks-add-task\" onClick={addTaskBtnHandler}>Dodaj zadanie</button>\n                {isAddTask && (\n                    <form className=\"event-page__tasks-new\">\n                        <label className=\"event-page__tasks-new-title\">\n                            <h3>Nazwa:</h3>\n                            <input type=\"text\" maxLength={50} value={taskName} onChange={event => setTaskName(event.target.value)} />\n                        </label>\n                        <label className=\"event-page__tasks-new-title\">\n                            <h3>Opis:</h3>\n                            <input type=\"text\" maxLength={50} value={taskDescription} \n                            onChange={event => setTaskDescription(event.target.value)} />\n                        </label>\n                        <label className=\"event-page__tasks-new-title\">\n                            <h3>Kwota:</h3>\n                            <input type=\"number\" placeholder=\"Opcjonalnie\" maxLength={50} value={taskCost} \n                            onChange={event => setTaskCost(event.target.value)} />\n                        </label>\n                        <button className=\"event-page__tasks-new-save-btn\" onClick={saveTaskBtnHandler}>Dodaj</button>\n                        {!isValid && <p className=\"event-page__tasks-wrong-input\">Pola nazwy i opisu nie mogą być puste!</p>}\n                    </form>\n                )}\n                <div className=\"event-page__tasks-list\">\n                    <h3 className=\"event-page__tasks-list-title\">Lista zadań:</h3>\n                    {tasks.map(singleTask => <Task key={singleTask.id} userId={user} eventId={eventId} task={singleTask}\n                    eventUpdate={updateEvent} />)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./guest.scss\";\nimport { doc, updateDoc, arrayRemove, getFirestore } from \"firebase/firestore\";\n\nexport const Guest = ({userId, eventId, guest, eventUpdate}) => {\n    const deleteGuestBtnHandler = async () => {\n        await updateDoc(doc(getFirestore(), \"users\", userId, \"events\", eventId), {\n            guests: arrayRemove(guest)\n        });\n\n        eventUpdate(prev => prev.map(event => {\n            if (event.id === eventId) {\n                event.guests = event.guests.filter(({id}) => id !== guest.id);\n            }\n            return event;\n        })); \n    }\n\n    return (\n        <div className=\"event-page__guest\">\n            <h3>{guest.name}</h3>\n            <span className=\"fas fa-trash\" title=\"Usuń\" onClick={deleteGuestBtnHandler} />\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport \"./guests.scss\";\nimport { eventValidation } from \"../validation\";\nimport { doc, updateDoc, arrayUnion, getFirestore } from \"firebase/firestore\";\nimport { Guest } from \"../Guest/Guest\";\n\nexport const Guests = ({user, eventId, guests, updateEvent}) => {\n    const [isAddGuest, setIsAddGuest] = useState(false);\n    const [guestName, setGuestName] = useState(\"\");\n    const [isValid, setIsValid] = useState(true);\n\n    const addGuestBtnHandler = () => {\n        setIsAddGuest(prev => !prev);\n        setGuestName(\"\");\n        !isValid && setIsValid(true);\n    }\n\n    const saveGuestBtnHandler = async (event) => {\n        event.preventDefault();\n\n        if (!eventValidation(guestName)) {\n            setIsValid(false);\n            return;\n        }\n\n        const dataToSet = {\n            id: Date.now(),\n            name: guestName\n        }\n\n        await updateDoc(doc(getFirestore(), \"users\", user, \"events\", eventId), {\n            guests: arrayUnion(dataToSet)\n        });\n\n        updateEvent(prev => prev.map(event => {\n            if (event.id === eventId) {\n                event.guests.push(dataToSet);\n            }\n            return event;\n        }));\n\n        setIsAddGuest(false);\n        setGuestName(\"\");\n        !isValid && setIsValid(true);\n    }\n\n    return (\n        <div className=\"event-page__content event-page__guests\">\n            <div className=\"event-page__bar\"/>\n            <div className=\"event-page__guests-content\">\n                <button className=\"event-page__guests-add-guest\" onClick={addGuestBtnHandler}>Dodaj gościa</button>\n                {isAddGuest && (\n                    <form className=\"event-page__guests-new\">\n                        <div className=\"event-page__guests-new-inputs\">\n                            <label className=\"event-page__guests-new-tittle\">\n                                <h3>Imię i nazwisko:</h3>\n                                <input type=\"text\" maxLength={50} value={guestName} onChange={event => setGuestName(event.target.value)} />\n                            </label>\n                            <button className=\"event-page__guests-new-btn\" onClick={saveGuestBtnHandler}>Dodaj</button>\n                        </div>\n                        {!isValid && <p className=\"event-page__guests-wrong-input\">Pole nie może być puste!</p>}\n                </form>\n                )}\n                <div className=\"event-page__guests-list\">\n                    <h3 className=\"event-page__guests-list-tittle\">Lista gości ({guests.length} {guests.length > 4 || guests.length < 2 \n                    ? (guests.length === 1 ? \"osoba\" : \"osób\") : \"osoby\"}):</h3>\n                    {guests.map(singleGuest => <Guest key={singleGuest.id} userId={user} eventId={eventId} guest={singleGuest}\n                    eventUpdate={updateEvent} />)}\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./cost.scss\";\n\nexport const Cost = ({tasks}) => {\n\n    return (\n        <div className=\"event-page__content event-page__cost\">\n            <div className=\"event-page__bar\"/>\n            <div className=\"event-page__cost-content\">\n                <div className=\"event-page__cost-main\">\n                    <h3>Koszty:</h3>\n                    <h3 className=\"event-page__cost-main-value\">{tasks.reduce((allCost, singleCost) => allCost + singleCost.cost, 0)} zł</h3>\n                </div>\n                <h3 className=\"event-page__cost-single-title\">Szczegółowe koszty:</h3>\n                <ul className=\"event-page__cost-single\">\n                    {tasks.map(({id, name, cost}) => cost !== 0 && <li key={id}>\n                    <span className=\"fas fa-caret-right\"/>{name} - <span className=\"event-page__cost-single-value\">{cost} zł</span>\n                    </li>)}\n                </ul>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./event.scss\";\nimport { Information } from \"../Information/Information\";\nimport { Tasks } from \"../Tasks/Tasks\";\nimport { Guests } from \"../Guests/Guests\";\nimport { Cost } from \"../Cost/Cost\";\n\nexport const Event = ({userId, id, name, place, date, tasks, guests, eventUpdate }) => {\n  return (\n    <div className=\"event-page\">\n      <div className=\"event-page__left-content\">\n        <Information user={userId} eventId={id} name={name} place={place} date={date} updateEvent={eventUpdate} />\n        <Tasks user={userId} eventId={id} tasks={tasks} updateEvent={eventUpdate} />\n      </div>\n      <div className=\"event-page__right-content\">\n        <Guests user={userId} eventId={id} guests={guests} updateEvent={eventUpdate} />\n        <Cost tasks={tasks} />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./events.scss\";\nimport { addDoc, collection, getFirestore } from \"firebase/firestore\";\nimport { eventValidation } from \"../validation\";\nimport { EventInfo } from \"../EventInfo/EventInfo\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { Event } from \"../Event/Event\";\n\nexport const Events = ({user, events, isArchive, updateEvents, updateArchive}) => {\n    const [isAddEvent, setIsAddEvent] = useState(false);\n    const [eventName, setEventName] = useState(\"\");\n    const [eventPlace, setEventPlace] = useState(\"\");\n    const [eventDate, setEventDate] = useState(\"\");\n    const [isValidate, setIsValidate] = useState(true);\n    let {path, url} = useRouteMatch();\n\n    const addEventBtnHandler = async (event) => {\n        event.preventDefault();\n        if (!eventValidation(eventName, eventPlace, eventDate)) {\n            setIsValidate(false);\n            return;\n        }\n\n        const dataToSet = {\n            name: eventName,\n            place: eventPlace,\n            date: `${eventDate.substr(8, 2)}.${eventDate.substr(5, 2)}.${eventDate.substr(0, 4)}`,\n            guests: [],\n            tasks: []\n        }\n\n        const dataFromSetting = await addDoc(collection(getFirestore(), \"users\", user, \"events\"), dataToSet);\n\n        updateEvents(prev => [...prev, {\n            ...dataToSet,\n            id: dataFromSetting.id\n        }]);\n        setEventName(\"\");\n        setEventPlace(\"\");\n        setEventDate(\"\");\n        setIsValidate(true);\n        setIsAddEvent(false);\n    }\n    \n    if(!isArchive) {\n        return (\n            <Switch>\n                <Route exact path={path}>\n                    <>\n                        <div className=\"home-page__add-event\">\n                            <div className=\"home-page__add-event-btn\" onClick={() => {\n                                setIsAddEvent(prev => !prev);\n                                setIsValidate(true);\n                            }}>\n                            <span className=\"far fa-plus-square\"/>Dodaj wydarzenie\n                        </div>\n                        {isAddEvent && (\n                            <div className=\"home-page__add-event-box\">\n                                <form>\n                                    <div className=\"home-page__add-event-input\">\n                                        <h3>Nazwa</h3>\n                                        <input type=\"text\" maxLength={50} value={eventName} onChange={e => setEventName(e.target.value)}/>\n                                    </div>\n                                    <div className=\"home-page__add-event-input\">\n                                        <h3>Miejsce</h3>\n                                        <input type=\"text\" maxLength={50} value={eventPlace} onChange={e => setEventPlace(e.target.value)}/>\n                                    </div>\n                                    <div className=\"home-page__add-event-input\">\n                                        <h3>Data</h3>\n                                        <input type=\"date\" value={eventDate} onChange={e => setEventDate(e.target.value)}/>\n                                    </div>\n                                    {!isValidate && <p>Pola nie mogą być puste!</p>}\n                                    <button onClick={addEventBtnHandler}>Dodaj</button>\n                                </form>\n                            </div>\n                        )}\n                        </div>\n                        <div className=\"home-page__events\">\n                            {events.map(singleEvent => <EventInfo key={singleEvent.id} user={user} data={singleEvent} \n                            isActive={true} eventsUpdate={updateEvents} archiveUpdate={updateArchive} url={url}/>)}\n                        </div>\n                    </>\n                </Route>\n                {events.map(({id, name, place, date, tasks, guests}) => <Route key={id} path={`${path}/${id}`}>\n                    <Event userId={user} id={id} name={name} place={place} date={date}\n                        tasks={tasks} guests={guests} eventUpdate={updateEvents}/>\n                </Route>)}\n            </Switch>\n        );\n    }\n    else {\n        return (\n            <div className=\"home-page__events\">\n                {events.map(singleEvent => <EventInfo key={singleEvent.id} user={user} data={singleEvent} \n                isActive={false} eventsUpdate={updateEvents} archiveUpdate={updateArchive}/>)}\n                {!events.length && <h2 className=\"home-page__events-null\">Brak wydarzeń w archiwum</h2>}\n            </div>\n        );\n    }\n}","import React, {useEffect, useState} from \"react\";\nimport \"./home.scss\";\nimport {getAuth, signOut} from \"firebase/auth\";\nimport {Link, Redirect, Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport {useUserStatus} from \"../useUserStatus\";\nimport logo from \"../images/navLogo.png\";\nimport {Events} from \"../Events/Events\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\n\nexport const Home = () => {\n    const {userId} = useUserStatus();\n    let {path, url} = useRouteMatch();\n    const [showMenu, setShowMenu] = useState(false);\n    const [eventsList, setEventsList] = useState([]);\n    const [archiveList, setArchiveList] = useState([]);\n\n    useEffect(() => {\n        if (userId) {\n            async function fetchData() {\n                const dataBase = getFirestore();\n                setEventsList([]);\n                setArchiveList([]);\n\n                const allEvents = await getDocs(collection(dataBase, \"users\", userId, \"events\"));\n                allEvents.forEach(singleEvent => {\n                    setEventsList(prev => [...prev, {\n                        ...singleEvent.data(),\n                        id: singleEvent.id,\n                        tasks: singleEvent.data().tasks.sort((a, b) => a.id - b.id)\n                    }]);\n                });\n\n                const allArchive = await getDocs(collection(dataBase, \"users\", userId, \"archive\"));\n                allArchive.forEach(singleEvent => {\n                    setArchiveList(prev => [...prev, {\n                        ...singleEvent.data(),\n                        id: singleEvent.id,\n                        tasks: singleEvent.data().tasks.sort((a, b) => a.id - b.id)\n                    }]);\n                });\n            }\n\n            fetchData();\n        }\n    }, [userId]);\n\n    const handleShowMenu = () => {\n        setShowMenu(prev => !prev);\n    }\n\n    return (\n        <div className=\"home-page\">\n            <header className=\"home-page__header\">\n                <div className=\"home-page__logo\">\n                    <img src={logo} alt=\"Event planner logo\"/>\n                    <h1>Event<br/>Planner</h1>\n                </div>\n                <input className=\"home-page__menu-btn\" id=\"home-page__menu-btn\" type=\"checkbox\" checked={showMenu} onChange={handleShowMenu}/>\n                <label className=\"home-page__menu-icon\" htmlFor=\"home-page__menu-btn\">\n                    <span className=\"home-page__nav-icon\"/>\n                </label>\n                <nav className=\"home-page__nav\">\n                    <ul>\n                        <Link to={`${url}/events`}>\n                            <li onClick={handleShowMenu}>Wydarzenia</li>\n                        </Link>\n                        <Link to={`${url}/archive`}>\n                            <li onClick={handleShowMenu}>Archiwum</li>\n                        </Link>\n                        <li onClick={() => signOut(getAuth())}>Wyloguj</li>\n                    </ul>\n                </nav>\n            </header>\n            <main className=\"home-page__main\">\n                <Switch>\n                    <Route exact path={path}><Redirect to={`${path}/events`}/></Route>\n                    <Route path={`${path}/events`}>\n                        <Events user={userId} events={eventsList} isArchive={false} updateEvents={data => setEventsList(data)} \n                        updateArchive={data => setArchiveList(data)}/>\n                    </Route>\n                    <Route path={`${path}/archive`}>\n                        <Events user={userId} events={archiveList} isArchive={true} updateEvents={data => setEventsList(data)} \n                        updateArchive={data => setArchiveList(data)}/>\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./app.scss\";\n// eslint-disable-next-line\nimport appBase from \"../firebase\";\nimport {useUserStatus} from \"../useUserStatus\";\nimport {LogBox} from \"../LogBox/LogBox\";\nimport {Home} from \"../Home/Home\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\n\nconst App = () => {\n    const {isLogIn} = useUserStatus();\n\n    return (\n        <HashRouter basename=\"/\">\n            <div className=\"app-container\">\n                <Switch>\n                    <Route path=\"/home\">\n                        {isLogIn ? <Home /> : <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/\">\n                        {!isLogIn ? <LogBox /> : <Redirect to=\"/home\" />}\n                    </Route>\n                    <Route path=\"/*\">\n                        <Redirect to=\"/\" />\n                    </Route>\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/settings/reset.scss\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}